{"ast":null,"code":"// src/store/slices/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../utils/axios';\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    console.log('Sending login request with:', {\n      email,\n      password\n    });\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    });\n    console.log('Login response:', data);\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data));\n      return data;\n    } else {\n      return rejectWithValue('Invalid response from server');\n    }\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('Login error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Invalid email or password');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.user = null;\n      state.error = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;\n\n// // frontend/src/store/slices/authSlice.js\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import api from '../../utils/axios';\n\n// export const login = createAsyncThunk(\n//   'auth/login',\n//   async ({ email, password }, { rejectWithValue }) => {\n//     try {\n//       const { data } = await api.post('/users/login', { email, password });\n//       // Зберігаємо токен та дані користувача\n//       localStorage.setItem('token', data.token);\n//       localStorage.setItem('user', JSON.stringify(data));\n//       return data.user;\n//     } catch (error) {\n//       return rejectWithValue(error.response.data.message);\n//     }\n//   }\n// );\n\n// const authSlice = createSlice({\n//   name: 'auth',\n//   initialState: {\n//     user: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null,\n//     loading: false,\n//     error: null,\n//   },\n//   reducers: {\n//     logout: (state) => {\n//       localStorage.removeItem('token');\n//       localStorage.removeItem('user');\n//       state.user = null;\n//     },\n//     clearError: (state) => {\n//       state.error = null;\n//     },\n//   },\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(login.pending, (state) => {\n//         state.loading = true;\n//         state.error = null;\n//       })\n//       .addCase(login.fulfilled, (state, action) => {\n//         state.loading = false;\n//         state.user = action.payload;\n//       })\n//       .addCase(login.rejected, (state, action) => {\n//         state.loading = false;\n//         state.error = action.payload;\n//       });\n//   },\n// });\n\n// export const { logout, clearError } = authSlice.actions;\n// export default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","login","email","password","rejectWithValue","console","log","data","post","token","localStorage","setItem","JSON","stringify","error","_error$response","_error$response2","_error$response2$data","response","message","authSlice","name","initialState","user","getItem","parse","loading","reducers","logout","state","removeItem","clearError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/serhii_bondariev/Documents/GitHub/PowerTools/frontend/src/store/slices/authSlice.js"],"sourcesContent":["// src/store/slices/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../utils/axios';\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }, { rejectWithValue }) => {\n    try {\n      console.log('Sending login request with:', { email, password });\n      const { data } = await axios.post('/api/users/login', { email, password });\n      console.log('Login response:', data);\n\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data));\n        return data;\n      } else {\n        return rejectWithValue('Invalid response from server');\n      }\n    } catch (error) {\n      console.error('Login error:', error.response?.data);\n      return rejectWithValue(error.response?.data?.message || 'Invalid email or password');\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null,\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    logout: (state) => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.user = null;\n      state.error = null;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { logout, clearError } = authSlice.actions;\nexport default authSlice.reducer;\n\n// // frontend/src/store/slices/authSlice.js\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import api from '../../utils/axios';\n\n// export const login = createAsyncThunk(\n//   'auth/login',\n//   async ({ email, password }, { rejectWithValue }) => {\n//     try {\n//       const { data } = await api.post('/users/login', { email, password });\n//       // Зберігаємо токен та дані користувача\n//       localStorage.setItem('token', data.token);\n//       localStorage.setItem('user', JSON.stringify(data));\n//       return data.user;\n//     } catch (error) {\n//       return rejectWithValue(error.response.data.message);\n//     }\n//   }\n// );\n\n// const authSlice = createSlice({\n//   name: 'auth',\n//   initialState: {\n//     user: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null,\n//     loading: false,\n//     error: null,\n//   },\n//   reducers: {\n//     logout: (state) => {\n//       localStorage.removeItem('token');\n//       localStorage.removeItem('user');\n//       state.user = null;\n//     },\n//     clearError: (state) => {\n//       state.error = null;\n//     },\n//   },\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(login.pending, (state) => {\n//         state.loading = true;\n//         state.error = null;\n//       })\n//       .addCase(login.fulfilled, (state, action) => {\n//         state.loading = false;\n//         state.user = action.payload;\n//       })\n//       .addCase(login.rejected, (state, action) => {\n//         state.loading = false;\n//         state.error = action.payload;\n//       });\n//   },\n// });\n\n// export const { logout, clearError } = authSlice.actions;\n// export default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}