{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useProductFilters.js\nimport { useState, useMemo } from 'react';\nexport function useProductFilters(initialProducts) {\n  _s();\n  const [filters, setFilters] = useState({\n    priceRange: [0, 500],\n    categories: [],\n    brands: [],\n    rating: 0,\n    sortBy: 'featured'\n  });\n  const filteredProducts = useMemo(() => {\n    return initialProducts.filter(product => {\n      // Price Filter\n      const withinPriceRange = product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1];\n\n      // Category Filter\n      const matchesCategory = filters.categories.length === 0 || filters.categories.includes(product.category);\n\n      // Brand Filter\n      const matchesBrand = filters.brands.length === 0 || filters.brands.includes(product.brand);\n\n      // Rating Filter\n      const matchesRating = filters.rating === 0 || product.rating >= filters.rating;\n      return withinPriceRange && matchesCategory && matchesBrand && matchesRating;\n    }).sort((a, b) => {\n      switch (filters.sortBy) {\n        case 'price-low':\n          return a.price - b.price;\n        case 'price-high':\n          return b.price - a.price;\n        case 'rating':\n          return b.rating - a.rating;\n        default:\n          return 0;\n      }\n    });\n  }, [initialProducts, filters]);\n  const updateFilter = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n  const clearFilters = () => {\n    setFilters({\n      priceRange: [0, 500],\n      categories: [],\n      brands: [],\n      rating: 0,\n      sortBy: 'featured'\n    });\n  };\n  return {\n    filters,\n    filteredProducts,\n    updateFilter,\n    clearFilters\n  };\n}\n_s(useProductFilters, \"xy8x3k8tZ91SJpwmXSNja3rL9cA=\");","map":{"version":3,"names":["useState","useMemo","useProductFilters","initialProducts","_s","filters","setFilters","priceRange","categories","brands","rating","sortBy","filteredProducts","filter","product","withinPriceRange","price","matchesCategory","length","includes","category","matchesBrand","brand","matchesRating","sort","a","b","updateFilter","filterType","value","prev","clearFilters"],"sources":["/Users/serhii_bondariev/Documents/GitHub/PowerTools/frontend/src/hooks/useProductFilters.js"],"sourcesContent":["// src/hooks/useProductFilters.js\nimport { useState, useMemo } from 'react';\n\nexport function useProductFilters(initialProducts) {\n  const [filters, setFilters] = useState({\n    priceRange: [0, 500],\n    categories: [],\n    brands: [],\n    rating: 0,\n    sortBy: 'featured'\n  });\n\n  const filteredProducts = useMemo(() => {\n    return initialProducts.filter(product => {\n      // Price Filter\n      const withinPriceRange =\n        product.price >= filters.priceRange[0] &&\n        product.price <= filters.priceRange[1];\n\n      // Category Filter\n      const matchesCategory =\n        filters.categories.length === 0 ||\n        filters.categories.includes(product.category);\n\n      // Brand Filter\n      const matchesBrand =\n        filters.brands.length === 0 ||\n        filters.brands.includes(product.brand);\n\n      // Rating Filter\n      const matchesRating =\n        filters.rating === 0 ||\n        product.rating >= filters.rating;\n\n      return withinPriceRange && matchesCategory && matchesBrand && matchesRating;\n    }).sort((a, b) => {\n      switch (filters.sortBy) {\n        case 'price-low':\n          return a.price - b.price;\n        case 'price-high':\n          return b.price - a.price;\n        case 'rating':\n          return b.rating - a.rating;\n        default:\n          return 0;\n      }\n    });\n  }, [initialProducts, filters]);\n\n  const updateFilter = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n\n  const clearFilters = () => {\n    setFilters({\n      priceRange: [0, 500],\n      categories: [],\n      brands: [],\n      rating: 0,\n      sortBy: 'featured'\n    });\n  };\n\n  return {\n    filters,\n    filteredProducts,\n    updateFilter,\n    clearFilters\n  };\n}\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAEzC,OAAO,SAASC,iBAAiBA,CAACC,eAAe,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC;IACrCO,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IACpBC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGX,OAAO,CAAC,MAAM;IACrC,OAAOE,eAAe,CAACU,MAAM,CAACC,OAAO,IAAI;MACvC;MACA,MAAMC,gBAAgB,GACpBD,OAAO,CAACE,KAAK,IAAIX,OAAO,CAACE,UAAU,CAAC,CAAC,CAAC,IACtCO,OAAO,CAACE,KAAK,IAAIX,OAAO,CAACE,UAAU,CAAC,CAAC,CAAC;;MAExC;MACA,MAAMU,eAAe,GACnBZ,OAAO,CAACG,UAAU,CAACU,MAAM,KAAK,CAAC,IAC/Bb,OAAO,CAACG,UAAU,CAACW,QAAQ,CAACL,OAAO,CAACM,QAAQ,CAAC;;MAE/C;MACA,MAAMC,YAAY,GAChBhB,OAAO,CAACI,MAAM,CAACS,MAAM,KAAK,CAAC,IAC3Bb,OAAO,CAACI,MAAM,CAACU,QAAQ,CAACL,OAAO,CAACQ,KAAK,CAAC;;MAExC;MACA,MAAMC,aAAa,GACjBlB,OAAO,CAACK,MAAM,KAAK,CAAC,IACpBI,OAAO,CAACJ,MAAM,IAAIL,OAAO,CAACK,MAAM;MAElC,OAAOK,gBAAgB,IAAIE,eAAe,IAAII,YAAY,IAAIE,aAAa;IAC7E,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAChB,QAAQrB,OAAO,CAACM,MAAM;QACpB,KAAK,WAAW;UACd,OAAOc,CAAC,CAACT,KAAK,GAAGU,CAAC,CAACV,KAAK;QAC1B,KAAK,YAAY;UACf,OAAOU,CAAC,CAACV,KAAK,GAAGS,CAAC,CAACT,KAAK;QAC1B,KAAK,QAAQ;UACX,OAAOU,CAAC,CAAChB,MAAM,GAAGe,CAAC,CAACf,MAAM;QAC5B;UACE,OAAO,CAAC;MACZ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,eAAe,EAAEE,OAAO,CAAC,CAAC;EAE9B,MAAMsB,YAAY,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;IAC1CvB,UAAU,CAACwB,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACF,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBzB,UAAU,CAAC;MACTC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACpBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IACLN,OAAO;IACPO,gBAAgB;IAChBe,YAAY;IACZI;EACF,CAAC;AACH;AAAC3B,EAAA,CArEeF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}